#include "iostream"

using namespace std;

struct nodo {
    int valor;//identificador
    nodo *izq;
    nodo *der;
};

struct nodo *raiz, *aux, *aux2, *padre;

int posicionar(){    
    if(aux->valor < aux2->valor){        
        if(aux2->izq==NULL){
            aux2->izq = aux;            
            return 0;
        }
        else {
            aux2 = aux2->izq;
            posicionar();
        }
    } 
    else {
        if(aux2->der==NULL){
            aux2->der = aux;            
            return 0;
        } else {
            aux2 = aux2->der;
            posicionar();
        }
    }
}
int registrar(){
    aux = ((struct nodo *) malloc (sizeof(struct nodo))); 
    cout<<"Digite el valor del nodo: ";
    cin>>aux->valor;
    aux->izq = aux->der = NULL;
    if(!raiz){
        raiz = aux;
        aux = NULL;
        free(aux);
    }
    else {        
        aux2 = raiz;
        posicionar();
        aux = NULL;
        free(aux);
    }
    return 0;
}
int recorrer(nodo *a) {
    cout<<"Valor: "<<a->valor<<endl;    
    if(a->izq!=NULL){
        recorrer(a->izq);
    }
    if(a->der!=NULL){
        recorrer(a->der);
    }
    return 0;
}
int mostrar(){
    if(raiz){        
        recorrer(raiz);
    }
}

int ubicar(nodo *a, int aguja){
    if(a->valor==aguja){
        aux2 = a;
        return 0;
    } else {
        if(a->izq!=NULL){
            ubicar(a->izq, aguja);
        } 
        
        if(a->der!=NULL){
            ubicar(a->der, aguja);
        }         
    }
    return 0;
}

int buscar(int aguja){//16
    aux = NULL;
    if(raiz!=NULL){
        aux = raiz;
        ubicar(aux, aguja);//16
    }
}
int pedirAguja(){
    aux2 = NULL;
    int dato;
    cout<<"Dato a Eliminar "<<endl;
    cin>>dato;//16
    buscar(dato);//16
    if(aux2){
        cout<<"Dato Encontrado"<<endl;
    } else {
        cout<<"El nodo no se encontro"<<endl;
    }

}
int ubicarPadre(nodo *a){
    if((a->izq==aux2)||(a->der==aux2)){
        padre = a;
    }
    else {
        if(a->izq!=NULL){
            ubicarPadre(a->izq);
        } 
        
        if(a->der!=NULL){
            ubicarPadre(a->der);
        }         
    }
}
int eliminar(){
    pedirAguja();
    if(aux2){
        //ubicar  aux en el padre de aux2
        if(aux2!=raiz){
            ubicarPadre(raiz);
            if(padre->izq==aux2){
                padre->izq=NULL;
            } else 
                padre->der = NULL;
        }
        free(aux2);
    }
}
int main(){
    int opc;
    do{
        cout<<"1. Registrar"
        <<endl<<"2. Mostrar"
        <<endl<<"3. Buscar"
        <<endl<<"4. Eliminar"
        <<endl<<"5. Salir"
        <<endl;
        cin>>opc;
        switch(opc){
            case 1: registrar(); break;
            case 2: mostrar(); break;
            case 3: pedirAguja(); break;
            case 4: eliminar(); break;
        }
    }while(opc!=5);
    return 0;
}
    
