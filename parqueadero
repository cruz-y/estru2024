#include <iostream>
#include <string>
using namespace std;


struct Vehiculo {
    string tipo;
    string placa;
};

// Constantes globales
const int CAPACIDAD_PARQUEADERO = 10;
const int COSTO_PARQUEO_MOTO = 500;
const int COSTO_PARQUEO_CARRO = 1000;
const int COSTO_MOVIMIENTO_MOTO = 50;
const int COSTO_MOVIMIENTO_CARRO = 100;

Vehiculo vehiculos[CAPACIDAD_PARQUEADERO];
int final = 0; 

void convertirMayusculas(string& texto) {
    for (char& c : texto) {
        c = toupper(c);
    }
}

void registrarVehiculo() {
    Vehiculo vehiculo;
    cout << "Ingrese el tipo de vehiculo (Carro/Moto): ";
    cin >> vehiculo.tipo;
    cout << "Ingrese la placa del vehiculo: ";
    cin >> vehiculo.placa;
    convertirMayusculas(vehiculo.placa);

    for (int i = 0; i < final; ++i) {
        if (vehiculos[i].placa == vehiculo.placa) {
            cout << "La placa ingresada ya esta registrada en el parqueadero." << endl;
            return;
        }
    }

    if (final < CAPACIDAD_PARQUEADERO) {
        vehiculos[final++] = vehiculo;
        cout << "Vehiculo registrado exitosamente." << endl;
    } else {
        cout << "El parqueadero esta lleno." << endl;
    }
}

void eliminarVehiculo() {
    string placa, tipo;
    cout << "Ingrese el tipo de vehiculo a eliminar (Carro/Moto): ";
    cin >> tipo;
    cout << "Ingrese la placa del vehiculo a eliminar: ";
    cin >> placa;
    convertirMayusculas(placa);

    for (int i = 0; i < final; ++i) {
        if (vehiculos[i].placa == placa && vehiculos[i].tipo == tipo) {
            int movimientos = final - i - 1;
            int costoTotal = movimientos * ((tipo == "Moto") ? COSTO_MOVIMIENTO_MOTO : COSTO_MOVIMIENTO_CARRO) + ((tipo == "Moto") ? COSTO_PARQUEO_MOTO : COSTO_PARQUEO_CARRO);
            cout << "Vehiculo con placa " << vehiculos[i].placa << " eliminado del parqueadero." << endl;
            cout << "Se realizaron " << movimientos << " movimientos adicionales para sacar el vehiculo." << endl;
            cout << "Costo total: " << costoTotal << endl;
            for (int j = i; j < final - 1; ++j) {
                vehiculos[j] = vehiculos[j + 1];
            }
            --final;
            return;
        }
    }
    cout << "No se encontro ningun vehiculo con la placa y tipo especificados." << endl;
}


void mostrarParqueaderoMoto() {
    cout << "Parqueadero de motos:" << endl;
    for (int i = final - 1; i >= 0; --i) {
        if (vehiculos[i].tipo == "Moto") {
            cout << "Placa: " << vehiculos[i].placa << endl;
        }
    }
}

void mostrarParqueaderoCarro() {
    cout << "Parqueadero de carros:" << endl;
    for (int i = final - 1; i >= 0; --i) {
        if (vehiculos[i].tipo == "Carro") {
            cout << "Placa: " << vehiculos[i].placa << endl;
        }
    }
}

int main() {
    char opcion;
    do {
        cout << "\n--- Menu ---" << endl;
        cout << "1. Registrar vehiculo" << endl;
        cout << "2. Eliminar vehiculo y calcular costo" << endl;
        cout << "3. Mostrar parqueadero de motos" << endl;
        cout << "4. Mostrar parqueadero de carros" << endl;
        cout << "5. Salir" << endl;
        cout << "Ingrese su opcion: ";
        cin >> opcion;

        switch(opcion) {
            case '1': {
                registrarVehiculo();
                break;
            }
            case '2': {
                eliminarVehiculo();
                break















                #include <iostream>
#include <malloc.h>
using namespace std;

struct Vehiculo{
    int placa;
    int tipoVehiculo;
    int precioEstacionar;
    int precioMover;
    Vehiculo *sigCarro;
    Vehiculo *sigMoto;
};
Vehiculo *topCarro = NULL;
Vehiculo *topMoto = NULL;

int ingresar(){
    
    Vehiculo *aux = (struct Vehiculo *)malloc(sizeof(struct Vehiculo));
    cout<<"Cual es la placa del vehiculo? : ";
    cin>> aux->placa;
    do{
        cout<<"que tipo de vehiculo va a parquear: " << endl<< "1. Carro" << endl<< "2. Moto" << endl;
        cin >> aux->tipoVehiculo;
        if (aux->tipoVehiculo != 1 && aux->tipoVehiculo != 2)
        {
            cout<<"tipo de vehiculo no valido" << endl;
        }
    }while (aux->tipoVehiculo != 1 && aux->tipoVehiculo != 2);
    if (aux->tipoVehiculo == 1){
        aux->precioEstacionar = 5000;
        aux->precioMover = 1000;
        aux->sigCarro = topCarro;
        topCarro = aux;
    }
    else{
        aux->precioEstacionar = 2500;
        aux->precioMover = 500;
        aux->sigMoto = topMoto;
        topMoto = aux;
    }
    cout<<"el vehiculo ha ingresado al parqueadero" << endl;
    return 0;
}

int sacarVehiculo(){
    if (!topCarro && !topMoto){
        cout<<"no hay vehiculos estacionados" << endl;
        return 0;
    }
    int placa;
    cout<<"digite la placa del vehiculo que va a salir: ";
    cin>> placa;

    Vehiculo *actualCarro = topCarro;
    Vehiculo *anteriorCarro = NULL;
    int contadorCarros = 0;

    while (actualCarro != NULL && actualCarro->placa != placa){
        anteriorCarro = actualCarro;
        actualCarro = actualCarro->sigCarro;
        contadorCarros++;
    }

    Vehiculo *actualMoto = topMoto;
    Vehiculo *anteriorMoto = NULL;
    int contadorMotos = 0;

    if (actualCarro == NULL){
        while (actualMoto != NULL && actualMoto->placa != placa){
            anteriorMoto = actualMoto;
            actualMoto = actualMoto->sigMoto;
            contadorMotos++;
        }
    }

    if (actualCarro != NULL){
        if (anteriorCarro != NULL){
            anteriorCarro->sigCarro = actualCarro->sigCarro;
        }
        else{
            topCarro= actualCarro->sigCarro;
        }

        int costoMovimiento = actualCarro->precioMover * contadorCarros;
        int totalCosto = actualCarro->precioEstacionar + costoMovimiento;
        cout<<"moviendo carro " << contadorCarros << " posiciones" << endl;
        cout<<"el vehiculo con la placa " << placa << " ha sido retirado del parqueadero. Total a pagar: " << totalCosto << " pesos" << endl;
        free(actualCarro);
    }
    else if (actualMoto != NULL){
        if (anteriorMoto != NULL){
            anteriorMoto->sigMoto = actualMoto->sigMoto;
        }
        else{
        topMoto = actualMoto->sigMoto;
        }
        int costoMovimiento = actualMoto->precioMover * contadorMotos;
        int totalCosto = actualMoto->precioEstacionar + costoMovimiento;
        cout<<"moviendo moto "<< contadorMotos <<" posiciones" << endl;
        cout<<"el vehiculo con la placa "<< placa <<" ha sido retirado del parqueadero. total a pagar: "<< totalCosto << " pesos" << endl;
        free(actualMoto);
    }
    else{
        cout<<"vehiculo no encontrado" << endl;
    }
    return 0;
}
int mostrarDinero(){
    if (topCarro == NULL && topMoto == NULL){
        cout << "el parqueadero está vacío" << endl;
        return 0;
    }
    int dineroEstacionarCarros = 0;
    int dineroEstacionarMotos = 0;
    int dineroMoverCarros = 0;
    int dineroMoverMotos = 0;
    Vehiculo *aux;

    aux = topCarro;
    while (aux != NULL){
        dineroEstacionarCarros += aux->precioEstacionar;
        dineroMoverCarros += aux->precioMover;
        aux= aux->sigCarro;
    }
    aux = topMoto;
    while (aux != NULL){
        dineroEstacionarMotos += aux->precioEstacionar;
        dineroMoverMotos += aux->precioMover;
        aux= aux->sigMoto;
    }
    cout << "dinero por estacionamiento de carros: " << dineroEstacionarCarros << " pesos." << endl;
    cout << "dinero por movimientos de carros: " << dineroMoverCarros << " pesos." << endl;
    cout << "dinero por estacionamiento de motos: " << dineroEstacionarMotos << " pesos." << endl;
    cout << "dinero por movimientos de motos: " << dineroMoverMotos << " pesos." << endl;

    return 0;
}
int mostrarCarros(){
    Vehiculo *aux = topCarro;
    if (aux==NULL){
        cout << "no hay carros en el parqueadero"<< endl;
        return 0;
    }

    cout<<"carros estacionados:"<<endl;
    while (aux!=NULL){
        cout << "placa: " << aux->placa<<endl;
        aux = aux->sigCarro;
    }
    return 0;
}
int mostrarMotos(){
    Vehiculo *aux = topMoto;
    if (aux == NULL){
        cout<<"no hay motos en el parqueadero"<<endl;
        return 0;
    }

    cout<<"motos estacionadas:" << endl;
    while (aux != NULL){
        cout<<"placa: " << aux->placa << endl;
        aux= aux->sigMoto;
    }
    return 0;
}

int main(){
    int opc =0;
    do{
        cout << "Menu Parqueadero" << endl;
        cout<< "";
        cout<<"1. Ingresar un vehiculo " << endl;
        cout<<"2. Sacar un vehiculo" << endl;
        cout<<"3. Mostrar carros en el parqueadero" << endl;
        cout<<"4. Mostrar motos en el parqueadero" << endl;
        cout<<"5. Mostrar dinero total recogido" << endl;
        cout<<"6. Salir" << endl;
        cout<<"";
        cout<<"Opcion: ";
        cin>>opc;

        switch (opc){
        case 1:
            ingresar();
            break;
        case 2:
            sacarVehiculo();
            break;
        case 3:
            mostrarCarros();
            break;
        case 4:
            mostrarMotos();
            break;
        case 5:
            mostrarDinero();
            break;
        case 6:
            cout<<"Hasta otro ingreso..." << endl;
            break;
        default:
            cout<<"La opcion no existe" << endl;
            break;
        }
    }while (opc!=6);

    return 0;
}
